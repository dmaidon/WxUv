Imports System.Globalization
Imports System.Runtime.CompilerServices
Imports Newtonsoft.Json
Imports Newtonsoft.Json.Converters

' <auto-generated />
'
' To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
'
'    using Elevation-API;
'
'    var elevationData = ElevationData.FromJson(jsonString);

Namespace Models.ElevationAPI
    Partial Public Class ElevationData
        <JsonProperty("elevations")> Public Property Elevations As Elevation()
        <JsonProperty("resolution")> Public Property Resolution As String
    End Class

    Partial Public Class Elevation
        <JsonProperty("lat")> Public Property Lat As Double

        <JsonProperty("lon")> Public Property Lon As Double

        <JsonProperty("elevation")> Public Property ElevationElevation As Long
    End Class

    Partial Public Class ElevationData
        Friend Shared Function FromJson(json As String) As ElevationData
            Return JsonConvert.DeserializeObject(Of ElevationData)(json, Settings)
        End Function
    End Class

    Public Module Serialize
        <Extension> Public Function ToJson(self As ElevationData) As String
            Return JsonConvert.SerializeObject(self, Settings)
        End Function
    End Module

    Friend Module Converter
        Public ReadOnly Settings As JsonSerializerSettings = New JsonSerializerSettings With {
            .MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            .DateParseHandling = DateParseHandling.None,
            .Converters = {New IsoDateTimeConverter With {.DateTimeStyles = DateTimeStyles.AssumeUniversal}}
            }
    End Module
End Namespace
